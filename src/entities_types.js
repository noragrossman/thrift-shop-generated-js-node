//
// Autogenerated by Thrift Compiler (0.10.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var shared_ttypes = require('./shared_types');
var eb_shared_ttypes = require('./eb_shared_types');


var ttypes = module.exports = {};
ttypes.Password = {
  'UNSET' : 1,
  'SET' : 2
};
var EntityChanged = module.exports.EntityChanged = function(args) {
  this.change_type = null;
  this.entity_uuid = null;
  this.role = null;
  this.email_address = null;
  this.facebook_uid = null;
  this.password = null;
  this.changed_at = null;
  if (args) {
    if (args.change_type !== undefined && args.change_type !== null) {
      this.change_type = args.change_type;
    }
    if (args.entity_uuid !== undefined && args.entity_uuid !== null) {
      this.entity_uuid = args.entity_uuid;
    }
    if (args.role !== undefined && args.role !== null) {
      this.role = args.role;
    }
    if (args.email_address !== undefined && args.email_address !== null) {
      this.email_address = args.email_address;
    }
    if (args.facebook_uid !== undefined && args.facebook_uid !== null) {
      this.facebook_uid = args.facebook_uid;
    }
    if (args.password !== undefined && args.password !== null) {
      this.password = args.password;
    }
    if (args.changed_at !== undefined && args.changed_at !== null) {
      this.changed_at = args.changed_at;
    }
  }
};
EntityChanged.prototype = {};
EntityChanged.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.change_type = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.role = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.email_address = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.facebook_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.password = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.changed_at = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EntityChanged.prototype.write = function(output) {
  output.writeStructBegin('EntityChanged');
  if (this.change_type !== null && this.change_type !== undefined) {
    output.writeFieldBegin('change_type', Thrift.Type.I32, 1);
    output.writeI32(this.change_type);
    output.writeFieldEnd();
  }
  if (this.entity_uuid !== null && this.entity_uuid !== undefined) {
    output.writeFieldBegin('entity_uuid', Thrift.Type.STRING, 2);
    output.writeString(this.entity_uuid);
    output.writeFieldEnd();
  }
  if (this.role !== null && this.role !== undefined) {
    output.writeFieldBegin('role', Thrift.Type.I32, 3);
    output.writeI32(this.role);
    output.writeFieldEnd();
  }
  if (this.email_address !== null && this.email_address !== undefined) {
    output.writeFieldBegin('email_address', Thrift.Type.STRING, 4);
    output.writeString(this.email_address);
    output.writeFieldEnd();
  }
  if (this.facebook_uid !== null && this.facebook_uid !== undefined) {
    output.writeFieldBegin('facebook_uid', Thrift.Type.STRING, 5);
    output.writeString(this.facebook_uid);
    output.writeFieldEnd();
  }
  if (this.password !== null && this.password !== undefined) {
    output.writeFieldBegin('password', Thrift.Type.I32, 6);
    output.writeI32(this.password);
    output.writeFieldEnd();
  }
  if (this.changed_at !== null && this.changed_at !== undefined) {
    output.writeFieldBegin('changed_at', Thrift.Type.STRING, 7);
    output.writeString(this.changed_at);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

