//
// Autogenerated by Thrift Compiler (0.10.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var ttypes = module.exports = {};
ttypes.ApnsEventType = {
  'ATTEMPT' : 1,
  'ACCEPT' : 2,
  'OPEN' : 3,
  'PROCESSING_ERROR' : 4,
  'MISSING_DEVICE_TOKEN' : 5,
  'MISSING_TOPIC' : 6,
  'MISSING_PAYLOAD' : 7,
  'INVALID_TOKEN_SIZE' : 8,
  'INVALID_TOPIC_SIZE' : 9,
  'INVALID_PAYLOAD_SIZE' : 10,
  'INVALID_TOKEN' : 11,
  'SHUTDOWN' : 12,
  'UNKNOWN_ERROR' : 13
};
ttypes.GcmEventType = {
  'ATTEMPT' : 1,
  'ACCEPT' : 2,
  'OPEN' : 3,
  'MISSING_REGISTRATION' : 4,
  'INVALID_REGISTRATION' : 5,
  'MISMATCH_SENDER_ID' : 6,
  'NOT_REGISTERED' : 7,
  'MESSAGE_TOO_BIG' : 8,
  'INVALID_DATA_KEY' : 9,
  'INVALID_TTL' : 10,
  'UNAVAILABLE' : 11,
  'INTERNAL_SERVER_ERROR' : 12,
  'INVALID_PACKAGE_NAME' : 13,
  'EXPIRED_REGISTRATION_ID' : 14,
  'MALFORMED_MESSAGE' : 15,
  'UNAUTHORIZED_SENDER' : 16,
  'UNKNOWN_ERROR' : 17
};
ttypes.OnsiteNotificationEventType = {
  'ATTEMPT' : 1,
  'ACCEPT' : 2,
  'OPEN' : 3,
  'CLICK' : 4,
  'CLIENT_SERVER_ERROR' : 5,
  'CLIENT_ERROR' : 6,
  'SERVER_ERROR' : 7,
  'UNKNOWN_ERROR' : 8
};
ttypes.EmailEventType = {
  'ACCEPT' : 1,
  'ATTEMPT' : 2,
  'BOUNCE' : 3,
  'CLICK' : 4,
  'COMPLAIN' : 5,
  'CONVERT' : 6,
  'DELIVER' : 7,
  'DROP' : 8,
  'MTA_FAIL' : 9,
  'OPEN' : 10,
  'PERM_FAIL' : 11,
  'REJECT' : 12,
  'UNSUBSCRIBE' : 13,
  'UNSUBSCRIBE_CLICK' : 14,
  'MTA_UNKNOWN_RESPONSE' : 15
};
var EventType = module.exports.EventType = function(args) {
  this.email_event_type = null;
  this.apns_event_type = null;
  this.gcm_event_type = null;
  this.onsite_notification_event_type = null;
  if (args) {
    if (args.email_event_type !== undefined && args.email_event_type !== null) {
      this.email_event_type = args.email_event_type;
    }
    if (args.apns_event_type !== undefined && args.apns_event_type !== null) {
      this.apns_event_type = args.apns_event_type;
    }
    if (args.gcm_event_type !== undefined && args.gcm_event_type !== null) {
      this.gcm_event_type = args.gcm_event_type;
    }
    if (args.onsite_notification_event_type !== undefined && args.onsite_notification_event_type !== null) {
      this.onsite_notification_event_type = args.onsite_notification_event_type;
    }
  }
};
EventType.prototype = {};
EventType.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.email_event_type = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.apns_event_type = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.gcm_event_type = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.onsite_notification_event_type = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EventType.prototype.write = function(output) {
  output.writeStructBegin('EventType');
  if (this.email_event_type !== null && this.email_event_type !== undefined) {
    output.writeFieldBegin('email_event_type', Thrift.Type.I32, 1);
    output.writeI32(this.email_event_type);
    output.writeFieldEnd();
  }
  if (this.apns_event_type !== null && this.apns_event_type !== undefined) {
    output.writeFieldBegin('apns_event_type', Thrift.Type.I32, 2);
    output.writeI32(this.apns_event_type);
    output.writeFieldEnd();
  }
  if (this.gcm_event_type !== null && this.gcm_event_type !== undefined) {
    output.writeFieldBegin('gcm_event_type', Thrift.Type.I32, 3);
    output.writeI32(this.gcm_event_type);
    output.writeFieldEnd();
  }
  if (this.onsite_notification_event_type !== null && this.onsite_notification_event_type !== undefined) {
    output.writeFieldBegin('onsite_notification_event_type', Thrift.Type.I32, 4);
    output.writeI32(this.onsite_notification_event_type);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var Tag = module.exports.Tag = function(args) {
  this.name = null;
  if (args) {
    if (args.name !== undefined && args.name !== null) {
      this.name = args.name;
    }
  }
};
Tag.prototype = {};
Tag.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Tag.prototype.write = function(output) {
  output.writeStructBegin('Tag');
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 1);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var Event = module.exports.Event = function(args) {
  this.uuid = null;
  this.message_id = null;
  this.timestamp = null;
  this.event_type = null;
  this.tags = null;
  if (args) {
    if (args.uuid !== undefined && args.uuid !== null) {
      this.uuid = args.uuid;
    }
    if (args.message_id !== undefined && args.message_id !== null) {
      this.message_id = args.message_id;
    }
    if (args.timestamp !== undefined && args.timestamp !== null) {
      this.timestamp = args.timestamp;
    }
    if (args.event_type !== undefined && args.event_type !== null) {
      this.event_type = new ttypes.EventType(args.event_type);
    }
    if (args.tags !== undefined && args.tags !== null) {
      this.tags = Thrift.copyList(args.tags, [ttypes.Tag]);
    }
  }
};
Event.prototype = {};
Event.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.message_id = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I64) {
        this.timestamp = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.event_type = new ttypes.EventType();
        this.event_type.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.SET) {
        var _size0 = 0;
        var _rtmp34;
        this.tags = [];
        var _etype3 = 0;
        _rtmp34 = input.readSetBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new ttypes.Tag();
          elem6.read(input);
          this.tags.push(elem6);
        }
        input.readSetEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Event.prototype.write = function(output) {
  output.writeStructBegin('Event');
  if (this.uuid !== null && this.uuid !== undefined) {
    output.writeFieldBegin('uuid', Thrift.Type.STRING, 1);
    output.writeString(this.uuid);
    output.writeFieldEnd();
  }
  if (this.message_id !== null && this.message_id !== undefined) {
    output.writeFieldBegin('message_id', Thrift.Type.STRING, 2);
    output.writeString(this.message_id);
    output.writeFieldEnd();
  }
  if (this.timestamp !== null && this.timestamp !== undefined) {
    output.writeFieldBegin('timestamp', Thrift.Type.I64, 3);
    output.writeI64(this.timestamp);
    output.writeFieldEnd();
  }
  if (this.event_type !== null && this.event_type !== undefined) {
    output.writeFieldBegin('event_type', Thrift.Type.STRUCT, 4);
    this.event_type.write(output);
    output.writeFieldEnd();
  }
  if (this.tags !== null && this.tags !== undefined) {
    output.writeFieldBegin('tags', Thrift.Type.SET, 5);
    output.writeSetBegin(Thrift.Type.STRUCT, this.tags.length);
    for (var iter7 in this.tags)
    {
      if (this.tags.hasOwnProperty(iter7))
      {
        iter7 = this.tags[iter7];
        iter7.write(output);
      }
    }
    output.writeSetEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

