//
// Autogenerated by Thrift Compiler (0.10.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var shared_ttypes = require('./shared_types');
var accounts_ttypes = require('./accounts_types');
var actions_ttypes = require('./actions_types');
var campaigns_ttypes = require('./campaigns_types');
var content_topics_ttypes = require('./content_topics_types');
var entities_ttypes = require('./entities_types');
var groups_ttypes = require('./groups_types');
var invitations_ttypes = require('./invitations_types');
var positions_ttypes = require('./positions_types');
var profile_districts_ttypes = require('./profile_districts_types');
var profiles_ttypes = require('./profiles_types');
var shares_ttypes = require('./shares_types');


var ttypes = require('./event_bus_types');
//HELPER FUNCTIONS AND STRUCTURES

var EventBusService_publish_args = function(args) {
  this.headers = null;
  this.message_parcel = null;
  if (args) {
    if (args.headers !== undefined && args.headers !== null) {
      this.headers = new shared_ttypes.RequestHeaders(args.headers);
    }
    if (args.message_parcel !== undefined && args.message_parcel !== null) {
      this.message_parcel = new ttypes.MessageParcel(args.message_parcel);
    }
  }
};
EventBusService_publish_args.prototype = {};
EventBusService_publish_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.headers = new shared_ttypes.RequestHeaders();
        this.headers.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.message_parcel = new ttypes.MessageParcel();
        this.message_parcel.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EventBusService_publish_args.prototype.write = function(output) {
  output.writeStructBegin('EventBusService_publish_args');
  if (this.headers !== null && this.headers !== undefined) {
    output.writeFieldBegin('headers', Thrift.Type.STRUCT, 2);
    this.headers.write(output);
    output.writeFieldEnd();
  }
  if (this.message_parcel !== null && this.message_parcel !== undefined) {
    output.writeFieldBegin('message_parcel', Thrift.Type.STRUCT, 1);
    this.message_parcel.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EventBusService_publish_result = function(args) {
  this.queue_full_exception = null;
  if (args instanceof ttypes.QueueFullException) {
    this.queue_full_exception = args;
    return;
  }
  if (args) {
    if (args.queue_full_exception !== undefined && args.queue_full_exception !== null) {
      this.queue_full_exception = args.queue_full_exception;
    }
  }
};
EventBusService_publish_result.prototype = {};
EventBusService_publish_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.queue_full_exception = new ttypes.QueueFullException();
        this.queue_full_exception.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EventBusService_publish_result.prototype.write = function(output) {
  output.writeStructBegin('EventBusService_publish_result');
  if (this.queue_full_exception !== null && this.queue_full_exception !== undefined) {
    output.writeFieldBegin('queue_full_exception', Thrift.Type.STRUCT, 1);
    this.queue_full_exception.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EventBusServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
EventBusServiceClient.prototype = {};
EventBusServiceClient.prototype.seqid = function() { return this._seqid; };
EventBusServiceClient.prototype.new_seqid = function() { return this._seqid += 1; };
EventBusServiceClient.prototype.publish = function(headers, message_parcel, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_publish(headers, message_parcel);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_publish(headers, message_parcel);
  }
};

EventBusServiceClient.prototype.send_publish = function(headers, message_parcel) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('publish', Thrift.MessageType.CALL, this.seqid());
  var args = new EventBusService_publish_args();
  args.headers = headers;
  args.message_parcel = message_parcel;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EventBusServiceClient.prototype.recv_publish = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EventBusService_publish_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.queue_full_exception) {
    return callback(result.queue_full_exception);
  }
  callback(null);
};
var EventBusServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler;
}
;
EventBusServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}
;
EventBusServiceProcessor.prototype.process_publish = function(seqid, input, output) {
  var args = new EventBusService_publish_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.publish.length === 2) {
    Q.fcall(this._handler.publish, args.headers, args.message_parcel)
      .then(function(result) {
        var result_obj = new EventBusService_publish_result({success: result});
        output.writeMessageBegin("publish", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof ttypes.QueueFullException) {
          result = new EventBusService_publish_result(err);
          output.writeMessageBegin("publish", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("publish", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.publish(args.headers, args.message_parcel, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.QueueFullException) {
        result_obj = new EventBusService_publish_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("publish", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("publish", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
