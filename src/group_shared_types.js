//
// Autogenerated by Thrift Compiler (0.10.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var shared_ttypes = require('./shared_types');


var ttypes = module.exports = {};
var GroupPetitionAdoption = module.exports.GroupPetitionAdoption = function(args) {
  this.uid = null;
  this.group_uid = null;
  this.petition_uid = null;
  this.petition_signature_goal = null;
  if (args) {
    if (args.uid !== undefined && args.uid !== null) {
      this.uid = args.uid;
    }
    if (args.group_uid !== undefined && args.group_uid !== null) {
      this.group_uid = args.group_uid;
    }
    if (args.petition_uid !== undefined && args.petition_uid !== null) {
      this.petition_uid = args.petition_uid;
    }
    if (args.petition_signature_goal !== undefined && args.petition_signature_goal !== null) {
      this.petition_signature_goal = args.petition_signature_goal;
    }
  }
};
GroupPetitionAdoption.prototype = {};
GroupPetitionAdoption.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.group_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.petition_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.petition_signature_goal = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GroupPetitionAdoption.prototype.write = function(output) {
  output.writeStructBegin('GroupPetitionAdoption');
  if (this.uid !== null && this.uid !== undefined) {
    output.writeFieldBegin('uid', Thrift.Type.STRING, 1);
    output.writeString(this.uid);
    output.writeFieldEnd();
  }
  if (this.group_uid !== null && this.group_uid !== undefined) {
    output.writeFieldBegin('group_uid', Thrift.Type.STRING, 2);
    output.writeString(this.group_uid);
    output.writeFieldEnd();
  }
  if (this.petition_uid !== null && this.petition_uid !== undefined) {
    output.writeFieldBegin('petition_uid', Thrift.Type.STRING, 3);
    output.writeString(this.petition_uid);
    output.writeFieldEnd();
  }
  if (this.petition_signature_goal !== null && this.petition_signature_goal !== undefined) {
    output.writeFieldBegin('petition_signature_goal', Thrift.Type.I32, 4);
    output.writeI32(this.petition_signature_goal);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

