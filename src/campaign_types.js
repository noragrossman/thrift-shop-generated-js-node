//
// Autogenerated by Thrift Compiler (0.10.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var shared_ttypes = require('./shared_types');
var event_bus_ttypes = require('./event_bus_types');


var ttypes = module.exports = {};
ttypes.IdeologyBucket = {
  'EXTREMELY_LIBERAL' : 1,
  'MODERATELY_LIBERAL' : 2,
  'NEUTRAL' : 3,
  'MODERATELY_CONSERVATIVE' : 4,
  'EXTREMELY_CONSERVATIVE' : 5
};
ttypes.GetCampaignSupportersSortField = {
  'CREATED_AT' : 0
};
var Campaign = module.exports.Campaign = function(args) {
  this.uid = null;
  this.name = null;
  this.leader_entity_uuid = null;
  this.mission = null;
  this.image = null;
  this.launched_at = null;
  this.topic_uids = null;
  this.ideology_buckets = null;
  if (args) {
    if (args.uid !== undefined && args.uid !== null) {
      this.uid = args.uid;
    }
    if (args.name !== undefined && args.name !== null) {
      this.name = args.name;
    }
    if (args.leader_entity_uuid !== undefined && args.leader_entity_uuid !== null) {
      this.leader_entity_uuid = args.leader_entity_uuid;
    }
    if (args.mission !== undefined && args.mission !== null) {
      this.mission = args.mission;
    }
    if (args.image !== undefined && args.image !== null) {
      this.image = args.image;
    }
    if (args.launched_at !== undefined && args.launched_at !== null) {
      this.launched_at = args.launched_at;
    }
    if (args.topic_uids !== undefined && args.topic_uids !== null) {
      this.topic_uids = Thrift.copyList(args.topic_uids, [null]);
    }
    if (args.ideology_buckets !== undefined && args.ideology_buckets !== null) {
      this.ideology_buckets = Thrift.copyList(args.ideology_buckets, [null]);
    }
  }
};
Campaign.prototype = {};
Campaign.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.leader_entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.mission = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.image = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.launched_at = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.topic_uids = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = input.readString();
          this.topic_uids.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 10:
      if (ftype == Thrift.Type.LIST) {
        var _size7 = 0;
        var _rtmp311;
        this.ideology_buckets = [];
        var _etype10 = 0;
        _rtmp311 = input.readListBegin();
        _etype10 = _rtmp311.etype;
        _size7 = _rtmp311.size;
        for (var _i12 = 0; _i12 < _size7; ++_i12)
        {
          var elem13 = null;
          elem13 = input.readI32();
          this.ideology_buckets.push(elem13);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

Campaign.prototype.write = function(output) {
  output.writeStructBegin('Campaign');
  if (this.uid !== null && this.uid !== undefined) {
    output.writeFieldBegin('uid', Thrift.Type.STRING, 1);
    output.writeString(this.uid);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 3);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.leader_entity_uuid !== null && this.leader_entity_uuid !== undefined) {
    output.writeFieldBegin('leader_entity_uuid', Thrift.Type.STRING, 4);
    output.writeString(this.leader_entity_uuid);
    output.writeFieldEnd();
  }
  if (this.mission !== null && this.mission !== undefined) {
    output.writeFieldBegin('mission', Thrift.Type.STRING, 5);
    output.writeString(this.mission);
    output.writeFieldEnd();
  }
  if (this.image !== null && this.image !== undefined) {
    output.writeFieldBegin('image', Thrift.Type.STRING, 6);
    output.writeString(this.image);
    output.writeFieldEnd();
  }
  if (this.launched_at !== null && this.launched_at !== undefined) {
    output.writeFieldBegin('launched_at', Thrift.Type.STRING, 7);
    output.writeString(this.launched_at);
    output.writeFieldEnd();
  }
  if (this.topic_uids !== null && this.topic_uids !== undefined) {
    output.writeFieldBegin('topic_uids', Thrift.Type.LIST, 8);
    output.writeListBegin(Thrift.Type.STRING, this.topic_uids.length);
    for (var iter14 in this.topic_uids)
    {
      if (this.topic_uids.hasOwnProperty(iter14))
      {
        iter14 = this.topic_uids[iter14];
        output.writeString(iter14);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.ideology_buckets !== null && this.ideology_buckets !== undefined) {
    output.writeFieldBegin('ideology_buckets', Thrift.Type.LIST, 10);
    output.writeListBegin(Thrift.Type.I32, this.ideology_buckets.length);
    for (var iter15 in this.ideology_buckets)
    {
      if (this.ideology_buckets.hasOwnProperty(iter15))
      {
        iter15 = this.ideology_buckets[iter15];
        output.writeI32(iter15);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CampaignSupporter = module.exports.CampaignSupporter = function(args) {
  this.entity_uuid = null;
  this.campaign_uid = null;
  this.created_at = null;
  if (args) {
    if (args.entity_uuid !== undefined && args.entity_uuid !== null) {
      this.entity_uuid = args.entity_uuid;
    }
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
    if (args.created_at !== undefined && args.created_at !== null) {
      this.created_at = args.created_at;
    }
  }
};
CampaignSupporter.prototype = {};
CampaignSupporter.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.created_at = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CampaignSupporter.prototype.write = function(output) {
  output.writeStructBegin('CampaignSupporter');
  if (this.entity_uuid !== null && this.entity_uuid !== undefined) {
    output.writeFieldBegin('entity_uuid', Thrift.Type.STRING, 1);
    output.writeString(this.entity_uuid);
    output.writeFieldEnd();
  }
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 2);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  if (this.created_at !== null && this.created_at !== undefined) {
    output.writeFieldBegin('created_at', Thrift.Type.STRING, 4);
    output.writeString(this.created_at);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CampaignUpdate = module.exports.CampaignUpdate = function(args) {
  this.uid = null;
  this.campaign_uid = null;
  this.title = null;
  this.image = null;
  this.video = null;
  this.body = null;
  this.rich_text_body = null;
  this.created_at = null;
  this.email_cta_text = null;
  this.email_cta_url = null;
  this.email_snippet = null;
  if (args) {
    if (args.uid !== undefined && args.uid !== null) {
      this.uid = args.uid;
    }
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
    if (args.title !== undefined && args.title !== null) {
      this.title = args.title;
    }
    if (args.image !== undefined && args.image !== null) {
      this.image = args.image;
    }
    if (args.video !== undefined && args.video !== null) {
      this.video = args.video;
    }
    if (args.body !== undefined && args.body !== null) {
      this.body = args.body;
    }
    if (args.rich_text_body !== undefined && args.rich_text_body !== null) {
      this.rich_text_body = args.rich_text_body;
    }
    if (args.created_at !== undefined && args.created_at !== null) {
      this.created_at = args.created_at;
    }
    if (args.email_cta_text !== undefined && args.email_cta_text !== null) {
      this.email_cta_text = args.email_cta_text;
    }
    if (args.email_cta_url !== undefined && args.email_cta_url !== null) {
      this.email_cta_url = args.email_cta_url;
    }
    if (args.email_snippet !== undefined && args.email_snippet !== null) {
      this.email_snippet = args.email_snippet;
    }
  }
};
CampaignUpdate.prototype = {};
CampaignUpdate.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.title = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.image = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.video = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.body = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.STRING) {
        this.rich_text_body = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.created_at = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.STRING) {
        this.email_cta_text = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 10:
      if (ftype == Thrift.Type.STRING) {
        this.email_cta_url = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 11:
      if (ftype == Thrift.Type.STRING) {
        this.email_snippet = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CampaignUpdate.prototype.write = function(output) {
  output.writeStructBegin('CampaignUpdate');
  if (this.uid !== null && this.uid !== undefined) {
    output.writeFieldBegin('uid', Thrift.Type.STRING, 1);
    output.writeString(this.uid);
    output.writeFieldEnd();
  }
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 2);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  if (this.title !== null && this.title !== undefined) {
    output.writeFieldBegin('title', Thrift.Type.STRING, 3);
    output.writeString(this.title);
    output.writeFieldEnd();
  }
  if (this.image !== null && this.image !== undefined) {
    output.writeFieldBegin('image', Thrift.Type.STRING, 4);
    output.writeString(this.image);
    output.writeFieldEnd();
  }
  if (this.video !== null && this.video !== undefined) {
    output.writeFieldBegin('video', Thrift.Type.STRING, 5);
    output.writeString(this.video);
    output.writeFieldEnd();
  }
  if (this.body !== null && this.body !== undefined) {
    output.writeFieldBegin('body', Thrift.Type.STRING, 6);
    output.writeString(this.body);
    output.writeFieldEnd();
  }
  if (this.rich_text_body !== null && this.rich_text_body !== undefined) {
    output.writeFieldBegin('rich_text_body', Thrift.Type.STRING, 8);
    output.writeString(this.rich_text_body);
    output.writeFieldEnd();
  }
  if (this.created_at !== null && this.created_at !== undefined) {
    output.writeFieldBegin('created_at', Thrift.Type.STRING, 7);
    output.writeString(this.created_at);
    output.writeFieldEnd();
  }
  if (this.email_cta_text !== null && this.email_cta_text !== undefined) {
    output.writeFieldBegin('email_cta_text', Thrift.Type.STRING, 9);
    output.writeString(this.email_cta_text);
    output.writeFieldEnd();
  }
  if (this.email_cta_url !== null && this.email_cta_url !== undefined) {
    output.writeFieldBegin('email_cta_url', Thrift.Type.STRING, 10);
    output.writeString(this.email_cta_url);
    output.writeFieldEnd();
  }
  if (this.email_snippet !== null && this.email_snippet !== undefined) {
    output.writeFieldBegin('email_snippet', Thrift.Type.STRING, 11);
    output.writeString(this.email_snippet);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CampaignPoll = module.exports.CampaignPoll = function(args) {
  this.uid = null;
  this.campaign_uid = null;
  this.position_uid = null;
  this.created_at = null;
  if (args) {
    if (args.uid !== undefined && args.uid !== null) {
      this.uid = args.uid;
    }
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
    if (args.position_uid !== undefined && args.position_uid !== null) {
      this.position_uid = args.position_uid;
    }
    if (args.created_at !== undefined && args.created_at !== null) {
      this.created_at = args.created_at;
    }
  }
};
CampaignPoll.prototype = {};
CampaignPoll.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.position_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.created_at = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CampaignPoll.prototype.write = function(output) {
  output.writeStructBegin('CampaignPoll');
  if (this.uid !== null && this.uid !== undefined) {
    output.writeFieldBegin('uid', Thrift.Type.STRING, 1);
    output.writeString(this.uid);
    output.writeFieldEnd();
  }
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 2);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  if (this.position_uid !== null && this.position_uid !== undefined) {
    output.writeFieldBegin('position_uid', Thrift.Type.STRING, 3);
    output.writeString(this.position_uid);
    output.writeFieldEnd();
  }
  if (this.created_at !== null && this.created_at !== undefined) {
    output.writeFieldBegin('created_at', Thrift.Type.STRING, 4);
    output.writeString(this.created_at);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CampaignPolls = module.exports.CampaignPolls = function(args) {
  this.campaign_polls = null;
  if (args) {
    if (args.campaign_polls !== undefined && args.campaign_polls !== null) {
      this.campaign_polls = Thrift.copyList(args.campaign_polls, [ttypes.CampaignPoll]);
    }
  }
};
CampaignPolls.prototype = {};
CampaignPolls.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size16 = 0;
        var _rtmp320;
        this.campaign_polls = [];
        var _etype19 = 0;
        _rtmp320 = input.readListBegin();
        _etype19 = _rtmp320.etype;
        _size16 = _rtmp320.size;
        for (var _i21 = 0; _i21 < _size16; ++_i21)
        {
          var elem22 = null;
          elem22 = new ttypes.CampaignPoll();
          elem22.read(input);
          this.campaign_polls.push(elem22);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CampaignPolls.prototype.write = function(output) {
  output.writeStructBegin('CampaignPolls');
  if (this.campaign_polls !== null && this.campaign_polls !== undefined) {
    output.writeFieldBegin('campaign_polls', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.campaign_polls.length);
    for (var iter23 in this.campaign_polls)
    {
      if (this.campaign_polls.hasOwnProperty(iter23))
      {
        iter23 = this.campaign_polls[iter23];
        iter23.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PaginatedCampaigns = module.exports.PaginatedCampaigns = function(args) {
  this.page_info = null;
  this.campaigns = null;
  if (args) {
    if (args.page_info !== undefined && args.page_info !== null) {
      this.page_info = new shared_ttypes.BoundaryLimitPageInfo(args.page_info);
    }
    if (args.campaigns !== undefined && args.campaigns !== null) {
      this.campaigns = Thrift.copyList(args.campaigns, [ttypes.Campaign]);
    }
  }
};
PaginatedCampaigns.prototype = {};
PaginatedCampaigns.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.page_info = new shared_ttypes.BoundaryLimitPageInfo();
        this.page_info.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size24 = 0;
        var _rtmp328;
        this.campaigns = [];
        var _etype27 = 0;
        _rtmp328 = input.readListBegin();
        _etype27 = _rtmp328.etype;
        _size24 = _rtmp328.size;
        for (var _i29 = 0; _i29 < _size24; ++_i29)
        {
          var elem30 = null;
          elem30 = new ttypes.Campaign();
          elem30.read(input);
          this.campaigns.push(elem30);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PaginatedCampaigns.prototype.write = function(output) {
  output.writeStructBegin('PaginatedCampaigns');
  if (this.page_info !== null && this.page_info !== undefined) {
    output.writeFieldBegin('page_info', Thrift.Type.STRUCT, 1);
    this.page_info.write(output);
    output.writeFieldEnd();
  }
  if (this.campaigns !== null && this.campaigns !== undefined) {
    output.writeFieldBegin('campaigns', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.campaigns.length);
    for (var iter31 in this.campaigns)
    {
      if (this.campaigns.hasOwnProperty(iter31))
      {
        iter31 = this.campaigns[iter31];
        iter31.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PaginatedCampaignUids = module.exports.PaginatedCampaignUids = function(args) {
  this.page_info = null;
  this.campaign_uids = null;
  if (args) {
    if (args.page_info !== undefined && args.page_info !== null) {
      this.page_info = new shared_ttypes.BoundaryLimitPageInfo(args.page_info);
    }
    if (args.campaign_uids !== undefined && args.campaign_uids !== null) {
      this.campaign_uids = Thrift.copyList(args.campaign_uids, [null]);
    }
  }
};
PaginatedCampaignUids.prototype = {};
PaginatedCampaignUids.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.page_info = new shared_ttypes.BoundaryLimitPageInfo();
        this.page_info.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size32 = 0;
        var _rtmp336;
        this.campaign_uids = [];
        var _etype35 = 0;
        _rtmp336 = input.readListBegin();
        _etype35 = _rtmp336.etype;
        _size32 = _rtmp336.size;
        for (var _i37 = 0; _i37 < _size32; ++_i37)
        {
          var elem38 = null;
          elem38 = input.readString();
          this.campaign_uids.push(elem38);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PaginatedCampaignUids.prototype.write = function(output) {
  output.writeStructBegin('PaginatedCampaignUids');
  if (this.page_info !== null && this.page_info !== undefined) {
    output.writeFieldBegin('page_info', Thrift.Type.STRUCT, 1);
    this.page_info.write(output);
    output.writeFieldEnd();
  }
  if (this.campaign_uids !== null && this.campaign_uids !== undefined) {
    output.writeFieldBegin('campaign_uids', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.campaign_uids.length);
    for (var iter39 in this.campaign_uids)
    {
      if (this.campaign_uids.hasOwnProperty(iter39))
      {
        iter39 = this.campaign_uids[iter39];
        output.writeString(iter39);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PaginatedCampaignUpdates = module.exports.PaginatedCampaignUpdates = function(args) {
  this.page_info = null;
  this.campaign_updates = null;
  if (args) {
    if (args.page_info !== undefined && args.page_info !== null) {
      this.page_info = new shared_ttypes.BoundaryLimitPageInfo(args.page_info);
    }
    if (args.campaign_updates !== undefined && args.campaign_updates !== null) {
      this.campaign_updates = Thrift.copyList(args.campaign_updates, [ttypes.CampaignUpdate]);
    }
  }
};
PaginatedCampaignUpdates.prototype = {};
PaginatedCampaignUpdates.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.page_info = new shared_ttypes.BoundaryLimitPageInfo();
        this.page_info.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size40 = 0;
        var _rtmp344;
        this.campaign_updates = [];
        var _etype43 = 0;
        _rtmp344 = input.readListBegin();
        _etype43 = _rtmp344.etype;
        _size40 = _rtmp344.size;
        for (var _i45 = 0; _i45 < _size40; ++_i45)
        {
          var elem46 = null;
          elem46 = new ttypes.CampaignUpdate();
          elem46.read(input);
          this.campaign_updates.push(elem46);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PaginatedCampaignUpdates.prototype.write = function(output) {
  output.writeStructBegin('PaginatedCampaignUpdates');
  if (this.page_info !== null && this.page_info !== undefined) {
    output.writeFieldBegin('page_info', Thrift.Type.STRUCT, 1);
    this.page_info.write(output);
    output.writeFieldEnd();
  }
  if (this.campaign_updates !== null && this.campaign_updates !== undefined) {
    output.writeFieldBegin('campaign_updates', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.campaign_updates.length);
    for (var iter47 in this.campaign_updates)
    {
      if (this.campaign_updates.hasOwnProperty(iter47))
      {
        iter47 = this.campaign_updates[iter47];
        iter47.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PaginatedCampaignPolls = module.exports.PaginatedCampaignPolls = function(args) {
  this.page_info = null;
  this.campaign_polls = null;
  if (args) {
    if (args.page_info !== undefined && args.page_info !== null) {
      this.page_info = new shared_ttypes.BoundaryLimitPageInfo(args.page_info);
    }
    if (args.campaign_polls !== undefined && args.campaign_polls !== null) {
      this.campaign_polls = Thrift.copyList(args.campaign_polls, [ttypes.CampaignPoll]);
    }
  }
};
PaginatedCampaignPolls.prototype = {};
PaginatedCampaignPolls.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.page_info = new shared_ttypes.BoundaryLimitPageInfo();
        this.page_info.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size48 = 0;
        var _rtmp352;
        this.campaign_polls = [];
        var _etype51 = 0;
        _rtmp352 = input.readListBegin();
        _etype51 = _rtmp352.etype;
        _size48 = _rtmp352.size;
        for (var _i53 = 0; _i53 < _size48; ++_i53)
        {
          var elem54 = null;
          elem54 = new ttypes.CampaignPoll();
          elem54.read(input);
          this.campaign_polls.push(elem54);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PaginatedCampaignPolls.prototype.write = function(output) {
  output.writeStructBegin('PaginatedCampaignPolls');
  if (this.page_info !== null && this.page_info !== undefined) {
    output.writeFieldBegin('page_info', Thrift.Type.STRUCT, 1);
    this.page_info.write(output);
    output.writeFieldEnd();
  }
  if (this.campaign_polls !== null && this.campaign_polls !== undefined) {
    output.writeFieldBegin('campaign_polls', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.campaign_polls.length);
    for (var iter55 in this.campaign_polls)
    {
      if (this.campaign_polls.hasOwnProperty(iter55))
      {
        iter55 = this.campaign_polls[iter55];
        iter55.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PaginatedSupporterUids = module.exports.PaginatedSupporterUids = function(args) {
  this.page_info = null;
  this.supporter_uids = null;
  if (args) {
    if (args.page_info !== undefined && args.page_info !== null) {
      this.page_info = new shared_ttypes.BoundaryLimitPageInfo(args.page_info);
    }
    if (args.supporter_uids !== undefined && args.supporter_uids !== null) {
      this.supporter_uids = Thrift.copyList(args.supporter_uids, [null]);
    }
  }
};
PaginatedSupporterUids.prototype = {};
PaginatedSupporterUids.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.page_info = new shared_ttypes.BoundaryLimitPageInfo();
        this.page_info.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size56 = 0;
        var _rtmp360;
        this.supporter_uids = [];
        var _etype59 = 0;
        _rtmp360 = input.readListBegin();
        _etype59 = _rtmp360.etype;
        _size56 = _rtmp360.size;
        for (var _i61 = 0; _i61 < _size56; ++_i61)
        {
          var elem62 = null;
          elem62 = input.readString();
          this.supporter_uids.push(elem62);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PaginatedSupporterUids.prototype.write = function(output) {
  output.writeStructBegin('PaginatedSupporterUids');
  if (this.page_info !== null && this.page_info !== undefined) {
    output.writeFieldBegin('page_info', Thrift.Type.STRUCT, 1);
    this.page_info.write(output);
    output.writeFieldEnd();
  }
  if (this.supporter_uids !== null && this.supporter_uids !== undefined) {
    output.writeFieldBegin('supporter_uids', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.supporter_uids.length);
    for (var iter63 in this.supporter_uids)
    {
      if (this.supporter_uids.hasOwnProperty(iter63))
      {
        iter63 = this.supporter_uids[iter63];
        output.writeString(iter63);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PaginatedCampaignSupporters = module.exports.PaginatedCampaignSupporters = function(args) {
  this.page_info = null;
  this.campaign_supporters = null;
  if (args) {
    if (args.page_info !== undefined && args.page_info !== null) {
      this.page_info = new shared_ttypes.BoundaryLimitPageInfo(args.page_info);
    }
    if (args.campaign_supporters !== undefined && args.campaign_supporters !== null) {
      this.campaign_supporters = Thrift.copyList(args.campaign_supporters, [ttypes.CampaignSupporter]);
    }
  }
};
PaginatedCampaignSupporters.prototype = {};
PaginatedCampaignSupporters.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.page_info = new shared_ttypes.BoundaryLimitPageInfo();
        this.page_info.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size64 = 0;
        var _rtmp368;
        this.campaign_supporters = [];
        var _etype67 = 0;
        _rtmp368 = input.readListBegin();
        _etype67 = _rtmp368.etype;
        _size64 = _rtmp368.size;
        for (var _i69 = 0; _i69 < _size64; ++_i69)
        {
          var elem70 = null;
          elem70 = new ttypes.CampaignSupporter();
          elem70.read(input);
          this.campaign_supporters.push(elem70);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PaginatedCampaignSupporters.prototype.write = function(output) {
  output.writeStructBegin('PaginatedCampaignSupporters');
  if (this.page_info !== null && this.page_info !== undefined) {
    output.writeFieldBegin('page_info', Thrift.Type.STRUCT, 1);
    this.page_info.write(output);
    output.writeFieldEnd();
  }
  if (this.campaign_supporters !== null && this.campaign_supporters !== undefined) {
    output.writeFieldBegin('campaign_supporters', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.campaign_supporters.length);
    for (var iter71 in this.campaign_supporters)
    {
      if (this.campaign_supporters.hasOwnProperty(iter71))
      {
        iter71 = this.campaign_supporters[iter71];
        iter71.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PaginatedEventUids = module.exports.PaginatedEventUids = function(args) {
  this.page_info = null;
  this.event_uids = null;
  if (args) {
    if (args.page_info !== undefined && args.page_info !== null) {
      this.page_info = new shared_ttypes.BoundaryLimitPageInfo(args.page_info);
    }
    if (args.event_uids !== undefined && args.event_uids !== null) {
      this.event_uids = Thrift.copyList(args.event_uids, [null]);
    }
  }
};
PaginatedEventUids.prototype = {};
PaginatedEventUids.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.page_info = new shared_ttypes.BoundaryLimitPageInfo();
        this.page_info.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size72 = 0;
        var _rtmp376;
        this.event_uids = [];
        var _etype75 = 0;
        _rtmp376 = input.readListBegin();
        _etype75 = _rtmp376.etype;
        _size72 = _rtmp376.size;
        for (var _i77 = 0; _i77 < _size72; ++_i77)
        {
          var elem78 = null;
          elem78 = input.readString();
          this.event_uids.push(elem78);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PaginatedEventUids.prototype.write = function(output) {
  output.writeStructBegin('PaginatedEventUids');
  if (this.page_info !== null && this.page_info !== undefined) {
    output.writeFieldBegin('page_info', Thrift.Type.STRUCT, 1);
    this.page_info.write(output);
    output.writeFieldEnd();
  }
  if (this.event_uids !== null && this.event_uids !== undefined) {
    output.writeFieldBegin('event_uids', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.event_uids.length);
    for (var iter79 in this.event_uids)
    {
      if (this.event_uids.hasOwnProperty(iter79))
      {
        iter79 = this.event_uids[iter79];
        output.writeString(iter79);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetSupportedCampaignUidsFilterParams = module.exports.GetSupportedCampaignUidsFilterParams = function(args) {
  this.campaign_uids = null;
  if (args) {
    if (args.campaign_uids !== undefined && args.campaign_uids !== null) {
      this.campaign_uids = Thrift.copyList(args.campaign_uids, [null]);
    }
  }
};
GetSupportedCampaignUidsFilterParams.prototype = {};
GetSupportedCampaignUidsFilterParams.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size80 = 0;
        var _rtmp384;
        this.campaign_uids = [];
        var _etype83 = 0;
        _rtmp384 = input.readListBegin();
        _etype83 = _rtmp384.etype;
        _size80 = _rtmp384.size;
        for (var _i85 = 0; _i85 < _size80; ++_i85)
        {
          var elem86 = null;
          elem86 = input.readString();
          this.campaign_uids.push(elem86);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetSupportedCampaignUidsFilterParams.prototype.write = function(output) {
  output.writeStructBegin('GetSupportedCampaignUidsFilterParams');
  if (this.campaign_uids !== null && this.campaign_uids !== undefined) {
    output.writeFieldBegin('campaign_uids', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRING, this.campaign_uids.length);
    for (var iter87 in this.campaign_uids)
    {
      if (this.campaign_uids.hasOwnProperty(iter87))
      {
        iter87 = this.campaign_uids[iter87];
        output.writeString(iter87);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetCampaignPollsFilterParams = module.exports.GetCampaignPollsFilterParams = function(args) {
  this.campaign_uids = null;
  if (args) {
    if (args.campaign_uids !== undefined && args.campaign_uids !== null) {
      this.campaign_uids = Thrift.copyList(args.campaign_uids, [null]);
    }
  }
};
GetCampaignPollsFilterParams.prototype = {};
GetCampaignPollsFilterParams.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size88 = 0;
        var _rtmp392;
        this.campaign_uids = [];
        var _etype91 = 0;
        _rtmp392 = input.readListBegin();
        _etype91 = _rtmp392.etype;
        _size88 = _rtmp392.size;
        for (var _i93 = 0; _i93 < _size88; ++_i93)
        {
          var elem94 = null;
          elem94 = input.readString();
          this.campaign_uids.push(elem94);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetCampaignPollsFilterParams.prototype.write = function(output) {
  output.writeStructBegin('GetCampaignPollsFilterParams');
  if (this.campaign_uids !== null && this.campaign_uids !== undefined) {
    output.writeFieldBegin('campaign_uids', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRING, this.campaign_uids.length);
    for (var iter95 in this.campaign_uids)
    {
      if (this.campaign_uids.hasOwnProperty(iter95))
      {
        iter95 = this.campaign_uids[iter95];
        output.writeString(iter95);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetCampaignSupportersFilterParams = module.exports.GetCampaignSupportersFilterParams = function(args) {
  this.joined_since = null;
  this.campaign_uids = null;
  if (args) {
    if (args.joined_since !== undefined && args.joined_since !== null) {
      this.joined_since = args.joined_since;
    }
    if (args.campaign_uids !== undefined && args.campaign_uids !== null) {
      this.campaign_uids = Thrift.copyList(args.campaign_uids, [null]);
    }
  }
};
GetCampaignSupportersFilterParams.prototype = {};
GetCampaignSupportersFilterParams.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.joined_since = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size96 = 0;
        var _rtmp3100;
        this.campaign_uids = [];
        var _etype99 = 0;
        _rtmp3100 = input.readListBegin();
        _etype99 = _rtmp3100.etype;
        _size96 = _rtmp3100.size;
        for (var _i101 = 0; _i101 < _size96; ++_i101)
        {
          var elem102 = null;
          elem102 = input.readString();
          this.campaign_uids.push(elem102);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetCampaignSupportersFilterParams.prototype.write = function(output) {
  output.writeStructBegin('GetCampaignSupportersFilterParams');
  if (this.joined_since !== null && this.joined_since !== undefined) {
    output.writeFieldBegin('joined_since', Thrift.Type.STRING, 3);
    output.writeString(this.joined_since);
    output.writeFieldEnd();
  }
  if (this.campaign_uids !== null && this.campaign_uids !== undefined) {
    output.writeFieldBegin('campaign_uids', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.campaign_uids.length);
    for (var iter103 in this.campaign_uids)
    {
      if (this.campaign_uids.hasOwnProperty(iter103))
      {
        iter103 = this.campaign_uids[iter103];
        output.writeString(iter103);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetCampaignSupportersSortParams = module.exports.GetCampaignSupportersSortParams = function(args) {
  this.sort_field = null;
  this.sort_order = null;
  if (args) {
    if (args.sort_field !== undefined && args.sort_field !== null) {
      this.sort_field = args.sort_field;
    }
    if (args.sort_order !== undefined && args.sort_order !== null) {
      this.sort_order = args.sort_order;
    }
  }
};
GetCampaignSupportersSortParams.prototype = {};
GetCampaignSupportersSortParams.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.sort_field = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.sort_order = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetCampaignSupportersSortParams.prototype.write = function(output) {
  output.writeStructBegin('GetCampaignSupportersSortParams');
  if (this.sort_field !== null && this.sort_field !== undefined) {
    output.writeFieldBegin('sort_field', Thrift.Type.I32, 1);
    output.writeI32(this.sort_field);
    output.writeFieldEnd();
  }
  if (this.sort_order !== null && this.sort_order !== undefined) {
    output.writeFieldBegin('sort_order', Thrift.Type.I32, 2);
    output.writeI32(this.sort_order);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var AddPetitionRequest = module.exports.AddPetitionRequest = function(args) {
  this.campaign_uid = null;
  this.petition_uid = null;
  if (args) {
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
    if (args.petition_uid !== undefined && args.petition_uid !== null) {
      this.petition_uid = args.petition_uid;
    }
  }
};
AddPetitionRequest.prototype = {};
AddPetitionRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.petition_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

AddPetitionRequest.prototype.write = function(output) {
  output.writeStructBegin('AddPetitionRequest');
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 1);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  if (this.petition_uid !== null && this.petition_uid !== undefined) {
    output.writeFieldBegin('petition_uid', Thrift.Type.STRING, 2);
    output.writeString(this.petition_uid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CreateCampaignRequest = module.exports.CreateCampaignRequest = function(args) {
  this.name = null;
  this.leader_entity_uuid = null;
  this.mission = null;
  this.image = null;
  this.topic_uids = null;
  this.ideology_buckets = null;
  if (args) {
    if (args.name !== undefined && args.name !== null) {
      this.name = args.name;
    }
    if (args.leader_entity_uuid !== undefined && args.leader_entity_uuid !== null) {
      this.leader_entity_uuid = args.leader_entity_uuid;
    }
    if (args.mission !== undefined && args.mission !== null) {
      this.mission = args.mission;
    }
    if (args.image !== undefined && args.image !== null) {
      this.image = args.image;
    }
    if (args.topic_uids !== undefined && args.topic_uids !== null) {
      this.topic_uids = Thrift.copyList(args.topic_uids, [null]);
    }
    if (args.ideology_buckets !== undefined && args.ideology_buckets !== null) {
      this.ideology_buckets = Thrift.copyList(args.ideology_buckets, [null]);
    }
  }
};
CreateCampaignRequest.prototype = {};
CreateCampaignRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.leader_entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.mission = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.image = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.LIST) {
        var _size104 = 0;
        var _rtmp3108;
        this.topic_uids = [];
        var _etype107 = 0;
        _rtmp3108 = input.readListBegin();
        _etype107 = _rtmp3108.etype;
        _size104 = _rtmp3108.size;
        for (var _i109 = 0; _i109 < _size104; ++_i109)
        {
          var elem110 = null;
          elem110 = input.readString();
          this.topic_uids.push(elem110);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.LIST) {
        var _size111 = 0;
        var _rtmp3115;
        this.ideology_buckets = [];
        var _etype114 = 0;
        _rtmp3115 = input.readListBegin();
        _etype114 = _rtmp3115.etype;
        _size111 = _rtmp3115.size;
        for (var _i116 = 0; _i116 < _size111; ++_i116)
        {
          var elem117 = null;
          elem117 = input.readI32();
          this.ideology_buckets.push(elem117);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CreateCampaignRequest.prototype.write = function(output) {
  output.writeStructBegin('CreateCampaignRequest');
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.leader_entity_uuid !== null && this.leader_entity_uuid !== undefined) {
    output.writeFieldBegin('leader_entity_uuid', Thrift.Type.STRING, 3);
    output.writeString(this.leader_entity_uuid);
    output.writeFieldEnd();
  }
  if (this.mission !== null && this.mission !== undefined) {
    output.writeFieldBegin('mission', Thrift.Type.STRING, 4);
    output.writeString(this.mission);
    output.writeFieldEnd();
  }
  if (this.image !== null && this.image !== undefined) {
    output.writeFieldBegin('image', Thrift.Type.STRING, 5);
    output.writeString(this.image);
    output.writeFieldEnd();
  }
  if (this.topic_uids !== null && this.topic_uids !== undefined) {
    output.writeFieldBegin('topic_uids', Thrift.Type.LIST, 6);
    output.writeListBegin(Thrift.Type.STRING, this.topic_uids.length);
    for (var iter118 in this.topic_uids)
    {
      if (this.topic_uids.hasOwnProperty(iter118))
      {
        iter118 = this.topic_uids[iter118];
        output.writeString(iter118);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.ideology_buckets !== null && this.ideology_buckets !== undefined) {
    output.writeFieldBegin('ideology_buckets', Thrift.Type.LIST, 8);
    output.writeListBegin(Thrift.Type.I32, this.ideology_buckets.length);
    for (var iter119 in this.ideology_buckets)
    {
      if (this.ideology_buckets.hasOwnProperty(iter119))
      {
        iter119 = this.ideology_buckets[iter119];
        output.writeI32(iter119);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CreateCampaignSupporterRequest = module.exports.CreateCampaignSupporterRequest = function(args) {
  this.entity_uuid = null;
  this.campaign_uid = null;
  if (args) {
    if (args.entity_uuid !== undefined && args.entity_uuid !== null) {
      this.entity_uuid = args.entity_uuid;
    }
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
  }
};
CreateCampaignSupporterRequest.prototype = {};
CreateCampaignSupporterRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CreateCampaignSupporterRequest.prototype.write = function(output) {
  output.writeStructBegin('CreateCampaignSupporterRequest');
  if (this.entity_uuid !== null && this.entity_uuid !== undefined) {
    output.writeFieldBegin('entity_uuid', Thrift.Type.STRING, 1);
    output.writeString(this.entity_uuid);
    output.writeFieldEnd();
  }
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 2);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CreateCampaignUpdateRequest = module.exports.CreateCampaignUpdateRequest = function(args) {
  this.campaign_uid = null;
  this.title = null;
  this.image = null;
  this.video = null;
  this.body = null;
  this.rich_text_body = null;
  this.email_cta_text = null;
  this.email_cta_url = null;
  this.email_snippet = null;
  if (args) {
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
    if (args.title !== undefined && args.title !== null) {
      this.title = args.title;
    }
    if (args.image !== undefined && args.image !== null) {
      this.image = args.image;
    }
    if (args.video !== undefined && args.video !== null) {
      this.video = args.video;
    }
    if (args.body !== undefined && args.body !== null) {
      this.body = args.body;
    }
    if (args.rich_text_body !== undefined && args.rich_text_body !== null) {
      this.rich_text_body = args.rich_text_body;
    }
    if (args.email_cta_text !== undefined && args.email_cta_text !== null) {
      this.email_cta_text = args.email_cta_text;
    }
    if (args.email_cta_url !== undefined && args.email_cta_url !== null) {
      this.email_cta_url = args.email_cta_url;
    }
    if (args.email_snippet !== undefined && args.email_snippet !== null) {
      this.email_snippet = args.email_snippet;
    }
  }
};
CreateCampaignUpdateRequest.prototype = {};
CreateCampaignUpdateRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.title = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.image = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.video = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.body = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.rich_text_body = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.email_cta_text = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.STRING) {
        this.email_cta_url = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.STRING) {
        this.email_snippet = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CreateCampaignUpdateRequest.prototype.write = function(output) {
  output.writeStructBegin('CreateCampaignUpdateRequest');
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 1);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  if (this.title !== null && this.title !== undefined) {
    output.writeFieldBegin('title', Thrift.Type.STRING, 2);
    output.writeString(this.title);
    output.writeFieldEnd();
  }
  if (this.image !== null && this.image !== undefined) {
    output.writeFieldBegin('image', Thrift.Type.STRING, 3);
    output.writeString(this.image);
    output.writeFieldEnd();
  }
  if (this.video !== null && this.video !== undefined) {
    output.writeFieldBegin('video', Thrift.Type.STRING, 4);
    output.writeString(this.video);
    output.writeFieldEnd();
  }
  if (this.body !== null && this.body !== undefined) {
    output.writeFieldBegin('body', Thrift.Type.STRING, 5);
    output.writeString(this.body);
    output.writeFieldEnd();
  }
  if (this.rich_text_body !== null && this.rich_text_body !== undefined) {
    output.writeFieldBegin('rich_text_body', Thrift.Type.STRING, 6);
    output.writeString(this.rich_text_body);
    output.writeFieldEnd();
  }
  if (this.email_cta_text !== null && this.email_cta_text !== undefined) {
    output.writeFieldBegin('email_cta_text', Thrift.Type.STRING, 7);
    output.writeString(this.email_cta_text);
    output.writeFieldEnd();
  }
  if (this.email_cta_url !== null && this.email_cta_url !== undefined) {
    output.writeFieldBegin('email_cta_url', Thrift.Type.STRING, 8);
    output.writeString(this.email_cta_url);
    output.writeFieldEnd();
  }
  if (this.email_snippet !== null && this.email_snippet !== undefined) {
    output.writeFieldBegin('email_snippet', Thrift.Type.STRING, 9);
    output.writeString(this.email_snippet);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CreateCampaignPollRequest = module.exports.CreateCampaignPollRequest = function(args) {
  this.campaign_uid = null;
  this.position_uid = null;
  if (args) {
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
    if (args.position_uid !== undefined && args.position_uid !== null) {
      this.position_uid = args.position_uid;
    }
  }
};
CreateCampaignPollRequest.prototype = {};
CreateCampaignPollRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.position_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CreateCampaignPollRequest.prototype.write = function(output) {
  output.writeStructBegin('CreateCampaignPollRequest');
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 1);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  if (this.position_uid !== null && this.position_uid !== undefined) {
    output.writeFieldBegin('position_uid', Thrift.Type.STRING, 2);
    output.writeString(this.position_uid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var DeleteCampaignSupporterRequest = module.exports.DeleteCampaignSupporterRequest = function(args) {
  this.entity_uuid = null;
  this.campaign_uid = null;
  if (args) {
    if (args.entity_uuid !== undefined && args.entity_uuid !== null) {
      this.entity_uuid = args.entity_uuid;
    }
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
  }
};
DeleteCampaignSupporterRequest.prototype = {};
DeleteCampaignSupporterRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

DeleteCampaignSupporterRequest.prototype.write = function(output) {
  output.writeStructBegin('DeleteCampaignSupporterRequest');
  if (this.entity_uuid !== null && this.entity_uuid !== undefined) {
    output.writeFieldBegin('entity_uuid', Thrift.Type.STRING, 1);
    output.writeString(this.entity_uuid);
    output.writeFieldEnd();
  }
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 2);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var DeleteCampaignUpdateRequest = module.exports.DeleteCampaignUpdateRequest = function(args) {
  this.campaign_update_uid = null;
  if (args) {
    if (args.campaign_update_uid !== undefined && args.campaign_update_uid !== null) {
      this.campaign_update_uid = args.campaign_update_uid;
    }
  }
};
DeleteCampaignUpdateRequest.prototype = {};
DeleteCampaignUpdateRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_update_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

DeleteCampaignUpdateRequest.prototype.write = function(output) {
  output.writeStructBegin('DeleteCampaignUpdateRequest');
  if (this.campaign_update_uid !== null && this.campaign_update_uid !== undefined) {
    output.writeFieldBegin('campaign_update_uid', Thrift.Type.STRING, 1);
    output.writeString(this.campaign_update_uid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EditCampaignRequest = module.exports.EditCampaignRequest = function(args) {
  this.uid = null;
  this.name = null;
  this.leader_entity_uuid = null;
  this.mission = null;
  this.image = null;
  this.topic_uids = null;
  this.ideology_buckets = null;
  if (args) {
    if (args.uid !== undefined && args.uid !== null) {
      this.uid = args.uid;
    }
    if (args.name !== undefined && args.name !== null) {
      this.name = args.name;
    }
    if (args.leader_entity_uuid !== undefined && args.leader_entity_uuid !== null) {
      this.leader_entity_uuid = args.leader_entity_uuid;
    }
    if (args.mission !== undefined && args.mission !== null) {
      this.mission = args.mission;
    }
    if (args.image !== undefined && args.image !== null) {
      this.image = args.image;
    }
    if (args.topic_uids !== undefined && args.topic_uids !== null) {
      this.topic_uids = Thrift.copyList(args.topic_uids, [null]);
    }
    if (args.ideology_buckets !== undefined && args.ideology_buckets !== null) {
      this.ideology_buckets = Thrift.copyList(args.ideology_buckets, [null]);
    }
  }
};
EditCampaignRequest.prototype = {};
EditCampaignRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.leader_entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.mission = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.image = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.LIST) {
        var _size120 = 0;
        var _rtmp3124;
        this.topic_uids = [];
        var _etype123 = 0;
        _rtmp3124 = input.readListBegin();
        _etype123 = _rtmp3124.etype;
        _size120 = _rtmp3124.size;
        for (var _i125 = 0; _i125 < _size120; ++_i125)
        {
          var elem126 = null;
          elem126 = input.readString();
          this.topic_uids.push(elem126);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.LIST) {
        var _size127 = 0;
        var _rtmp3131;
        this.ideology_buckets = [];
        var _etype130 = 0;
        _rtmp3131 = input.readListBegin();
        _etype130 = _rtmp3131.etype;
        _size127 = _rtmp3131.size;
        for (var _i132 = 0; _i132 < _size127; ++_i132)
        {
          var elem133 = null;
          elem133 = input.readI32();
          this.ideology_buckets.push(elem133);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EditCampaignRequest.prototype.write = function(output) {
  output.writeStructBegin('EditCampaignRequest');
  if (this.uid !== null && this.uid !== undefined) {
    output.writeFieldBegin('uid', Thrift.Type.STRING, 1);
    output.writeString(this.uid);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.leader_entity_uuid !== null && this.leader_entity_uuid !== undefined) {
    output.writeFieldBegin('leader_entity_uuid', Thrift.Type.STRING, 3);
    output.writeString(this.leader_entity_uuid);
    output.writeFieldEnd();
  }
  if (this.mission !== null && this.mission !== undefined) {
    output.writeFieldBegin('mission', Thrift.Type.STRING, 4);
    output.writeString(this.mission);
    output.writeFieldEnd();
  }
  if (this.image !== null && this.image !== undefined) {
    output.writeFieldBegin('image', Thrift.Type.STRING, 5);
    output.writeString(this.image);
    output.writeFieldEnd();
  }
  if (this.topic_uids !== null && this.topic_uids !== undefined) {
    output.writeFieldBegin('topic_uids', Thrift.Type.LIST, 6);
    output.writeListBegin(Thrift.Type.STRING, this.topic_uids.length);
    for (var iter134 in this.topic_uids)
    {
      if (this.topic_uids.hasOwnProperty(iter134))
      {
        iter134 = this.topic_uids[iter134];
        output.writeString(iter134);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.ideology_buckets !== null && this.ideology_buckets !== undefined) {
    output.writeFieldBegin('ideology_buckets', Thrift.Type.LIST, 8);
    output.writeListBegin(Thrift.Type.I32, this.ideology_buckets.length);
    for (var iter135 in this.ideology_buckets)
    {
      if (this.ideology_buckets.hasOwnProperty(iter135))
      {
        iter135 = this.ideology_buckets[iter135];
        output.writeI32(iter135);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EditCampaignUpdateRequest = module.exports.EditCampaignUpdateRequest = function(args) {
  this.uid = null;
  this.title = null;
  this.image = null;
  this.video = null;
  this.body = null;
  this.rich_text_body = null;
  this.email_cta_text = null;
  this.email_cta_url = null;
  this.email_snippet = null;
  if (args) {
    if (args.uid !== undefined && args.uid !== null) {
      this.uid = args.uid;
    }
    if (args.title !== undefined && args.title !== null) {
      this.title = args.title;
    }
    if (args.image !== undefined && args.image !== null) {
      this.image = args.image;
    }
    if (args.video !== undefined && args.video !== null) {
      this.video = args.video;
    }
    if (args.body !== undefined && args.body !== null) {
      this.body = args.body;
    }
    if (args.rich_text_body !== undefined && args.rich_text_body !== null) {
      this.rich_text_body = args.rich_text_body;
    }
    if (args.email_cta_text !== undefined && args.email_cta_text !== null) {
      this.email_cta_text = args.email_cta_text;
    }
    if (args.email_cta_url !== undefined && args.email_cta_url !== null) {
      this.email_cta_url = args.email_cta_url;
    }
    if (args.email_snippet !== undefined && args.email_snippet !== null) {
      this.email_snippet = args.email_snippet;
    }
  }
};
EditCampaignUpdateRequest.prototype = {};
EditCampaignUpdateRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.title = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.image = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.video = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.body = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.rich_text_body = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.email_cta_text = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.STRING) {
        this.email_cta_url = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.STRING) {
        this.email_snippet = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EditCampaignUpdateRequest.prototype.write = function(output) {
  output.writeStructBegin('EditCampaignUpdateRequest');
  if (this.uid !== null && this.uid !== undefined) {
    output.writeFieldBegin('uid', Thrift.Type.STRING, 1);
    output.writeString(this.uid);
    output.writeFieldEnd();
  }
  if (this.title !== null && this.title !== undefined) {
    output.writeFieldBegin('title', Thrift.Type.STRING, 2);
    output.writeString(this.title);
    output.writeFieldEnd();
  }
  if (this.image !== null && this.image !== undefined) {
    output.writeFieldBegin('image', Thrift.Type.STRING, 3);
    output.writeString(this.image);
    output.writeFieldEnd();
  }
  if (this.video !== null && this.video !== undefined) {
    output.writeFieldBegin('video', Thrift.Type.STRING, 4);
    output.writeString(this.video);
    output.writeFieldEnd();
  }
  if (this.body !== null && this.body !== undefined) {
    output.writeFieldBegin('body', Thrift.Type.STRING, 5);
    output.writeString(this.body);
    output.writeFieldEnd();
  }
  if (this.rich_text_body !== null && this.rich_text_body !== undefined) {
    output.writeFieldBegin('rich_text_body', Thrift.Type.STRING, 6);
    output.writeString(this.rich_text_body);
    output.writeFieldEnd();
  }
  if (this.email_cta_text !== null && this.email_cta_text !== undefined) {
    output.writeFieldBegin('email_cta_text', Thrift.Type.STRING, 7);
    output.writeString(this.email_cta_text);
    output.writeFieldEnd();
  }
  if (this.email_cta_url !== null && this.email_cta_url !== undefined) {
    output.writeFieldBegin('email_cta_url', Thrift.Type.STRING, 8);
    output.writeString(this.email_cta_url);
    output.writeFieldEnd();
  }
  if (this.email_snippet !== null && this.email_snippet !== undefined) {
    output.writeFieldBegin('email_snippet', Thrift.Type.STRING, 9);
    output.writeString(this.email_snippet);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetCampaignForPetitionRequest = module.exports.GetCampaignForPetitionRequest = function(args) {
  this.petition_uid = null;
  if (args) {
    if (args.petition_uid !== undefined && args.petition_uid !== null) {
      this.petition_uid = args.petition_uid;
    }
  }
};
GetCampaignForPetitionRequest.prototype = {};
GetCampaignForPetitionRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.petition_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetCampaignForPetitionRequest.prototype.write = function(output) {
  output.writeStructBegin('GetCampaignForPetitionRequest');
  if (this.petition_uid !== null && this.petition_uid !== undefined) {
    output.writeFieldBegin('petition_uid', Thrift.Type.STRING, 1);
    output.writeString(this.petition_uid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetCampaignsRequest = module.exports.GetCampaignsRequest = function(args) {
  this.campaign_uids = null;
  this.launched = null;
  this.pagination_params = null;
  if (args) {
    if (args.campaign_uids !== undefined && args.campaign_uids !== null) {
      this.campaign_uids = Thrift.copyList(args.campaign_uids, [null]);
    }
    if (args.launched !== undefined && args.launched !== null) {
      this.launched = args.launched;
    }
    if (args.pagination_params !== undefined && args.pagination_params !== null) {
      this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams(args.pagination_params);
    }
  }
};
GetCampaignsRequest.prototype = {};
GetCampaignsRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size136 = 0;
        var _rtmp3140;
        this.campaign_uids = [];
        var _etype139 = 0;
        _rtmp3140 = input.readListBegin();
        _etype139 = _rtmp3140.etype;
        _size136 = _rtmp3140.size;
        for (var _i141 = 0; _i141 < _size136; ++_i141)
        {
          var elem142 = null;
          elem142 = input.readString();
          this.campaign_uids.push(elem142);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.BOOL) {
        this.launched = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams();
        this.pagination_params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetCampaignsRequest.prototype.write = function(output) {
  output.writeStructBegin('GetCampaignsRequest');
  if (this.campaign_uids !== null && this.campaign_uids !== undefined) {
    output.writeFieldBegin('campaign_uids', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRING, this.campaign_uids.length);
    for (var iter143 in this.campaign_uids)
    {
      if (this.campaign_uids.hasOwnProperty(iter143))
      {
        iter143 = this.campaign_uids[iter143];
        output.writeString(iter143);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.launched !== null && this.launched !== undefined) {
    output.writeFieldBegin('launched', Thrift.Type.BOOL, 2);
    output.writeBool(this.launched);
    output.writeFieldEnd();
  }
  if (this.pagination_params !== null && this.pagination_params !== undefined) {
    output.writeFieldBegin('pagination_params', Thrift.Type.STRUCT, 3);
    this.pagination_params.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetCampaignUpdatesRequest = module.exports.GetCampaignUpdatesRequest = function(args) {
  this.campaign_uid = null;
  this.campaign_update_uids = null;
  this.pagination_params = null;
  if (args) {
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
    if (args.campaign_update_uids !== undefined && args.campaign_update_uids !== null) {
      this.campaign_update_uids = Thrift.copyList(args.campaign_update_uids, [null]);
    }
    if (args.pagination_params !== undefined && args.pagination_params !== null) {
      this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams(args.pagination_params);
    }
  }
};
GetCampaignUpdatesRequest.prototype = {};
GetCampaignUpdatesRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size144 = 0;
        var _rtmp3148;
        this.campaign_update_uids = [];
        var _etype147 = 0;
        _rtmp3148 = input.readListBegin();
        _etype147 = _rtmp3148.etype;
        _size144 = _rtmp3148.size;
        for (var _i149 = 0; _i149 < _size144; ++_i149)
        {
          var elem150 = null;
          elem150 = input.readString();
          this.campaign_update_uids.push(elem150);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams();
        this.pagination_params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetCampaignUpdatesRequest.prototype.write = function(output) {
  output.writeStructBegin('GetCampaignUpdatesRequest');
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 1);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  if (this.campaign_update_uids !== null && this.campaign_update_uids !== undefined) {
    output.writeFieldBegin('campaign_update_uids', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.campaign_update_uids.length);
    for (var iter151 in this.campaign_update_uids)
    {
      if (this.campaign_update_uids.hasOwnProperty(iter151))
      {
        iter151 = this.campaign_update_uids[iter151];
        output.writeString(iter151);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.pagination_params !== null && this.pagination_params !== undefined) {
    output.writeFieldBegin('pagination_params', Thrift.Type.STRUCT, 3);
    this.pagination_params.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CampaignPollUniqueIdentifiers = module.exports.CampaignPollUniqueIdentifiers = function(args) {
  this.campaign_poll_uids = null;
  if (args) {
    if (args.campaign_poll_uids !== undefined && args.campaign_poll_uids !== null) {
      this.campaign_poll_uids = Thrift.copyList(args.campaign_poll_uids, [null]);
    }
  }
};
CampaignPollUniqueIdentifiers.prototype = {};
CampaignPollUniqueIdentifiers.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size152 = 0;
        var _rtmp3156;
        this.campaign_poll_uids = [];
        var _etype155 = 0;
        _rtmp3156 = input.readListBegin();
        _etype155 = _rtmp3156.etype;
        _size152 = _rtmp3156.size;
        for (var _i157 = 0; _i157 < _size152; ++_i157)
        {
          var elem158 = null;
          elem158 = input.readString();
          this.campaign_poll_uids.push(elem158);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CampaignPollUniqueIdentifiers.prototype.write = function(output) {
  output.writeStructBegin('CampaignPollUniqueIdentifiers');
  if (this.campaign_poll_uids !== null && this.campaign_poll_uids !== undefined) {
    output.writeFieldBegin('campaign_poll_uids', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.campaign_poll_uids.length);
    for (var iter159 in this.campaign_poll_uids)
    {
      if (this.campaign_poll_uids.hasOwnProperty(iter159))
      {
        iter159 = this.campaign_poll_uids[iter159];
        output.writeString(iter159);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetCampaignPollsByIdentifiersRequest = module.exports.GetCampaignPollsByIdentifiersRequest = function(args) {
  this.campaign_poll_identifiers = null;
  if (args) {
    if (args.campaign_poll_identifiers !== undefined && args.campaign_poll_identifiers !== null) {
      this.campaign_poll_identifiers = new ttypes.CampaignPollUniqueIdentifiers(args.campaign_poll_identifiers);
    }
  }
};
GetCampaignPollsByIdentifiersRequest.prototype = {};
GetCampaignPollsByIdentifiersRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.campaign_poll_identifiers = new ttypes.CampaignPollUniqueIdentifiers();
        this.campaign_poll_identifiers.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetCampaignPollsByIdentifiersRequest.prototype.write = function(output) {
  output.writeStructBegin('GetCampaignPollsByIdentifiersRequest');
  if (this.campaign_poll_identifiers !== null && this.campaign_poll_identifiers !== undefined) {
    output.writeFieldBegin('campaign_poll_identifiers', Thrift.Type.STRUCT, 2);
    this.campaign_poll_identifiers.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetCampaignPollsRequest = module.exports.GetCampaignPollsRequest = function(args) {
  this.pagination_params = null;
  this.filter_params = null;
  if (args) {
    if (args.pagination_params !== undefined && args.pagination_params !== null) {
      this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams(args.pagination_params);
    }
    if (args.filter_params !== undefined && args.filter_params !== null) {
      this.filter_params = new ttypes.GetCampaignPollsFilterParams(args.filter_params);
    }
  }
};
GetCampaignPollsRequest.prototype = {};
GetCampaignPollsRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams();
        this.pagination_params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.filter_params = new ttypes.GetCampaignPollsFilterParams();
        this.filter_params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetCampaignPollsRequest.prototype.write = function(output) {
  output.writeStructBegin('GetCampaignPollsRequest');
  if (this.pagination_params !== null && this.pagination_params !== undefined) {
    output.writeFieldBegin('pagination_params', Thrift.Type.STRUCT, 1);
    this.pagination_params.write(output);
    output.writeFieldEnd();
  }
  if (this.filter_params !== null && this.filter_params !== undefined) {
    output.writeFieldBegin('filter_params', Thrift.Type.STRUCT, 2);
    this.filter_params.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetPetitionUidsRequest = module.exports.GetPetitionUidsRequest = function(args) {
  this.campaign_uid = null;
  this.campaign_uids = null;
  if (args) {
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
    if (args.campaign_uids !== undefined && args.campaign_uids !== null) {
      this.campaign_uids = Thrift.copyList(args.campaign_uids, [null]);
    }
  }
};
GetPetitionUidsRequest.prototype = {};
GetPetitionUidsRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size160 = 0;
        var _rtmp3164;
        this.campaign_uids = [];
        var _etype163 = 0;
        _rtmp3164 = input.readListBegin();
        _etype163 = _rtmp3164.etype;
        _size160 = _rtmp3164.size;
        for (var _i165 = 0; _i165 < _size160; ++_i165)
        {
          var elem166 = null;
          elem166 = input.readString();
          this.campaign_uids.push(elem166);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetPetitionUidsRequest.prototype.write = function(output) {
  output.writeStructBegin('GetPetitionUidsRequest');
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 1);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  if (this.campaign_uids !== null && this.campaign_uids !== undefined) {
    output.writeFieldBegin('campaign_uids', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRING, this.campaign_uids.length);
    for (var iter167 in this.campaign_uids)
    {
      if (this.campaign_uids.hasOwnProperty(iter167))
      {
        iter167 = this.campaign_uids[iter167];
        output.writeString(iter167);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetSupportedCampaignUidsRequest = module.exports.GetSupportedCampaignUidsRequest = function(args) {
  this.pagination_params = null;
  this.entity_uuid = null;
  this.filter_params = null;
  if (args) {
    if (args.pagination_params !== undefined && args.pagination_params !== null) {
      this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams(args.pagination_params);
    }
    if (args.entity_uuid !== undefined && args.entity_uuid !== null) {
      this.entity_uuid = args.entity_uuid;
    }
    if (args.filter_params !== undefined && args.filter_params !== null) {
      this.filter_params = new ttypes.GetSupportedCampaignUidsFilterParams(args.filter_params);
    }
  }
};
GetSupportedCampaignUidsRequest.prototype = {};
GetSupportedCampaignUidsRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams();
        this.pagination_params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.filter_params = new ttypes.GetSupportedCampaignUidsFilterParams();
        this.filter_params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetSupportedCampaignUidsRequest.prototype.write = function(output) {
  output.writeStructBegin('GetSupportedCampaignUidsRequest');
  if (this.pagination_params !== null && this.pagination_params !== undefined) {
    output.writeFieldBegin('pagination_params', Thrift.Type.STRUCT, 1);
    this.pagination_params.write(output);
    output.writeFieldEnd();
  }
  if (this.entity_uuid !== null && this.entity_uuid !== undefined) {
    output.writeFieldBegin('entity_uuid', Thrift.Type.STRING, 2);
    output.writeString(this.entity_uuid);
    output.writeFieldEnd();
  }
  if (this.filter_params !== null && this.filter_params !== undefined) {
    output.writeFieldBegin('filter_params', Thrift.Type.STRUCT, 3);
    this.filter_params.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetSupporterUidsRequest = module.exports.GetSupporterUidsRequest = function(args) {
  this.campaign_uid = null;
  this.pagination_params = null;
  if (args) {
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
    if (args.pagination_params !== undefined && args.pagination_params !== null) {
      this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams(args.pagination_params);
    }
  }
};
GetSupporterUidsRequest.prototype = {};
GetSupporterUidsRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams();
        this.pagination_params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetSupporterUidsRequest.prototype.write = function(output) {
  output.writeStructBegin('GetSupporterUidsRequest');
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 1);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  if (this.pagination_params !== null && this.pagination_params !== undefined) {
    output.writeFieldBegin('pagination_params', Thrift.Type.STRUCT, 2);
    this.pagination_params.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetCampaignSupportersRequest = module.exports.GetCampaignSupportersRequest = function(args) {
  this.pagination_params = null;
  this.filter_params = null;
  this.sort_params = null;
  if (args) {
    if (args.pagination_params !== undefined && args.pagination_params !== null) {
      this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams(args.pagination_params);
    }
    if (args.filter_params !== undefined && args.filter_params !== null) {
      this.filter_params = new ttypes.GetCampaignSupportersFilterParams(args.filter_params);
    }
    if (args.sort_params !== undefined && args.sort_params !== null) {
      this.sort_params = new ttypes.GetCampaignSupportersSortParams(args.sort_params);
    }
  }
};
GetCampaignSupportersRequest.prototype = {};
GetCampaignSupportersRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams();
        this.pagination_params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.filter_params = new ttypes.GetCampaignSupportersFilterParams();
        this.filter_params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.sort_params = new ttypes.GetCampaignSupportersSortParams();
        this.sort_params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetCampaignSupportersRequest.prototype.write = function(output) {
  output.writeStructBegin('GetCampaignSupportersRequest');
  if (this.pagination_params !== null && this.pagination_params !== undefined) {
    output.writeFieldBegin('pagination_params', Thrift.Type.STRUCT, 1);
    this.pagination_params.write(output);
    output.writeFieldEnd();
  }
  if (this.filter_params !== null && this.filter_params !== undefined) {
    output.writeFieldBegin('filter_params', Thrift.Type.STRUCT, 2);
    this.filter_params.write(output);
    output.writeFieldEnd();
  }
  if (this.sort_params !== null && this.sort_params !== undefined) {
    output.writeFieldBegin('sort_params', Thrift.Type.STRUCT, 3);
    this.sort_params.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var LaunchCampaignRequest = module.exports.LaunchCampaignRequest = function(args) {
  this.campaign_uid = null;
  if (args) {
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
  }
};
LaunchCampaignRequest.prototype = {};
LaunchCampaignRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

LaunchCampaignRequest.prototype.write = function(output) {
  output.writeStructBegin('LaunchCampaignRequest');
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 1);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var TriggerCampaignPollNotificationRequest = module.exports.TriggerCampaignPollNotificationRequest = function(args) {
  this.campaign_poll_uid = null;
  if (args) {
    if (args.campaign_poll_uid !== undefined && args.campaign_poll_uid !== null) {
      this.campaign_poll_uid = args.campaign_poll_uid;
    }
  }
};
TriggerCampaignPollNotificationRequest.prototype = {};
TriggerCampaignPollNotificationRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_poll_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

TriggerCampaignPollNotificationRequest.prototype.write = function(output) {
  output.writeStructBegin('TriggerCampaignPollNotificationRequest');
  if (this.campaign_poll_uid !== null && this.campaign_poll_uid !== undefined) {
    output.writeFieldBegin('campaign_poll_uid', Thrift.Type.STRING, 1);
    output.writeString(this.campaign_poll_uid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetIdeologyBucketsRequest = module.exports.GetIdeologyBucketsRequest = function(args) {
  this.campaign_uid = null;
  if (args) {
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
  }
};
GetIdeologyBucketsRequest.prototype = {};
GetIdeologyBucketsRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetIdeologyBucketsRequest.prototype.write = function(output) {
  output.writeStructBegin('GetIdeologyBucketsRequest');
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 1);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var GetEventUidsRequest = module.exports.GetEventUidsRequest = function(args) {
  this.pagination_params = null;
  this.campaign_uid = null;
  if (args) {
    if (args.pagination_params !== undefined && args.pagination_params !== null) {
      this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams(args.pagination_params);
    }
    if (args.campaign_uid !== undefined && args.campaign_uid !== null) {
      this.campaign_uid = args.campaign_uid;
    }
  }
};
GetEventUidsRequest.prototype = {};
GetEventUidsRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.pagination_params = new shared_ttypes.BoundaryLimitPaginationParams();
        this.pagination_params.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.campaign_uid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GetEventUidsRequest.prototype.write = function(output) {
  output.writeStructBegin('GetEventUidsRequest');
  if (this.pagination_params !== null && this.pagination_params !== undefined) {
    output.writeFieldBegin('pagination_params', Thrift.Type.STRUCT, 1);
    this.pagination_params.write(output);
    output.writeFieldEnd();
  }
  if (this.campaign_uid !== null && this.campaign_uid !== undefined) {
    output.writeFieldBegin('campaign_uid', Thrift.Type.STRING, 2);
    output.writeString(this.campaign_uid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

