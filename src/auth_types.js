//
// Autogenerated by Thrift Compiler (0.10.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var shared_ttypes = require('./shared_types');


var ttypes = module.exports = {};
var OauthToken = module.exports.OauthToken = function(args) {
  this.entity_uuid = null;
  this.access_token = null;
  this.refresh_token = null;
  this.authorized_roles = null;
  this.access_token_expires_in = null;
  this.refresh_token_expires_in = null;
  if (args) {
    if (args.entity_uuid !== undefined && args.entity_uuid !== null) {
      this.entity_uuid = args.entity_uuid;
    }
    if (args.access_token !== undefined && args.access_token !== null) {
      this.access_token = args.access_token;
    }
    if (args.refresh_token !== undefined && args.refresh_token !== null) {
      this.refresh_token = args.refresh_token;
    }
    if (args.authorized_roles !== undefined && args.authorized_roles !== null) {
      this.authorized_roles = Thrift.copyList(args.authorized_roles, [null]);
    }
    if (args.access_token_expires_in !== undefined && args.access_token_expires_in !== null) {
      this.access_token_expires_in = args.access_token_expires_in;
    }
    if (args.refresh_token_expires_in !== undefined && args.refresh_token_expires_in !== null) {
      this.refresh_token_expires_in = args.refresh_token_expires_in;
    }
  }
};
OauthToken.prototype = {};
OauthToken.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.access_token = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.refresh_token = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.authorized_roles = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = input.readI32();
          this.authorized_roles.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.access_token_expires_in = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.refresh_token_expires_in = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

OauthToken.prototype.write = function(output) {
  output.writeStructBegin('OauthToken');
  if (this.entity_uuid !== null && this.entity_uuid !== undefined) {
    output.writeFieldBegin('entity_uuid', Thrift.Type.STRING, 1);
    output.writeString(this.entity_uuid);
    output.writeFieldEnd();
  }
  if (this.access_token !== null && this.access_token !== undefined) {
    output.writeFieldBegin('access_token', Thrift.Type.STRING, 2);
    output.writeString(this.access_token);
    output.writeFieldEnd();
  }
  if (this.refresh_token !== null && this.refresh_token !== undefined) {
    output.writeFieldBegin('refresh_token', Thrift.Type.STRING, 3);
    output.writeString(this.refresh_token);
    output.writeFieldEnd();
  }
  if (this.authorized_roles !== null && this.authorized_roles !== undefined) {
    output.writeFieldBegin('authorized_roles', Thrift.Type.LIST, 4);
    output.writeListBegin(Thrift.Type.I32, this.authorized_roles.length);
    for (var iter7 in this.authorized_roles)
    {
      if (this.authorized_roles.hasOwnProperty(iter7))
      {
        iter7 = this.authorized_roles[iter7];
        output.writeI32(iter7);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.access_token_expires_in !== null && this.access_token_expires_in !== undefined) {
    output.writeFieldBegin('access_token_expires_in', Thrift.Type.I32, 5);
    output.writeI32(this.access_token_expires_in);
    output.writeFieldEnd();
  }
  if (this.refresh_token_expires_in !== null && this.refresh_token_expires_in !== undefined) {
    output.writeFieldBegin('refresh_token_expires_in', Thrift.Type.I32, 6);
    output.writeI32(this.refresh_token_expires_in);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var OauthTokens = module.exports.OauthTokens = function(args) {
  this.oauth_tokens = null;
  if (args) {
    if (args.oauth_tokens !== undefined && args.oauth_tokens !== null) {
      this.oauth_tokens = Thrift.copyList(args.oauth_tokens, [ttypes.OauthToken]);
    }
  }
};
OauthTokens.prototype = {};
OauthTokens.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.oauth_tokens = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = new ttypes.OauthToken();
          elem14.read(input);
          this.oauth_tokens.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

OauthTokens.prototype.write = function(output) {
  output.writeStructBegin('OauthTokens');
  if (this.oauth_tokens !== null && this.oauth_tokens !== undefined) {
    output.writeFieldBegin('oauth_tokens', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.oauth_tokens.length);
    for (var iter15 in this.oauth_tokens)
    {
      if (this.oauth_tokens.hasOwnProperty(iter15))
      {
        iter15 = this.oauth_tokens[iter15];
        iter15.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CreateUserWebOauthTokensRequest = module.exports.CreateUserWebOauthTokensRequest = function(args) {
  this.entity_uuids = null;
  this.refresh_token_lifetime = null;
  if (args) {
    if (args.entity_uuids !== undefined && args.entity_uuids !== null) {
      this.entity_uuids = Thrift.copyList(args.entity_uuids, [null]);
    }
    if (args.refresh_token_lifetime !== undefined && args.refresh_token_lifetime !== null) {
      this.refresh_token_lifetime = args.refresh_token_lifetime;
    }
  }
};
CreateUserWebOauthTokensRequest.prototype = {};
CreateUserWebOauthTokensRequest.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size16 = 0;
        var _rtmp320;
        this.entity_uuids = [];
        var _etype19 = 0;
        _rtmp320 = input.readListBegin();
        _etype19 = _rtmp320.etype;
        _size16 = _rtmp320.size;
        for (var _i21 = 0; _i21 < _size16; ++_i21)
        {
          var elem22 = null;
          elem22 = input.readString();
          this.entity_uuids.push(elem22);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.refresh_token_lifetime = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CreateUserWebOauthTokensRequest.prototype.write = function(output) {
  output.writeStructBegin('CreateUserWebOauthTokensRequest');
  if (this.entity_uuids !== null && this.entity_uuids !== undefined) {
    output.writeFieldBegin('entity_uuids', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRING, this.entity_uuids.length);
    for (var iter23 in this.entity_uuids)
    {
      if (this.entity_uuids.hasOwnProperty(iter23))
      {
        iter23 = this.entity_uuids[iter23];
        output.writeString(iter23);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.refresh_token_lifetime !== null && this.refresh_token_lifetime !== undefined) {
    output.writeFieldBegin('refresh_token_lifetime', Thrift.Type.I32, 2);
    output.writeI32(this.refresh_token_lifetime);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

