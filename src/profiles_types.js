//
// Autogenerated by Thrift Compiler (0.10.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var shared_ttypes = require('./shared_types');
var contact_types_ttypes = require('./contact_types_types');
var eb_shared_ttypes = require('./eb_shared_types');


var ttypes = module.exports = {};
var ProfileCreated = module.exports.ProfileCreated = function(args) {
  this.entity_uuid = null;
  this.full_name = null;
  this.email_address = null;
  this.created_at = null;
  this.avatar_url = null;
  if (args) {
    if (args.entity_uuid !== undefined && args.entity_uuid !== null) {
      this.entity_uuid = args.entity_uuid;
    }
    if (args.full_name !== undefined && args.full_name !== null) {
      this.full_name = args.full_name;
    }
    if (args.email_address !== undefined && args.email_address !== null) {
      this.email_address = args.email_address;
    }
    if (args.created_at !== undefined && args.created_at !== null) {
      this.created_at = args.created_at;
    }
    if (args.avatar_url !== undefined && args.avatar_url !== null) {
      this.avatar_url = args.avatar_url;
    }
  }
};
ProfileCreated.prototype = {};
ProfileCreated.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.full_name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.email_address = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.created_at = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.avatar_url = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProfileCreated.prototype.write = function(output) {
  output.writeStructBegin('ProfileCreated');
  if (this.entity_uuid !== null && this.entity_uuid !== undefined) {
    output.writeFieldBegin('entity_uuid', Thrift.Type.STRING, 1);
    output.writeString(this.entity_uuid);
    output.writeFieldEnd();
  }
  if (this.full_name !== null && this.full_name !== undefined) {
    output.writeFieldBegin('full_name', Thrift.Type.STRING, 2);
    output.writeString(this.full_name);
    output.writeFieldEnd();
  }
  if (this.email_address !== null && this.email_address !== undefined) {
    output.writeFieldBegin('email_address', Thrift.Type.STRING, 3);
    output.writeString(this.email_address);
    output.writeFieldEnd();
  }
  if (this.created_at !== null && this.created_at !== undefined) {
    output.writeFieldBegin('created_at', Thrift.Type.STRING, 4);
    output.writeString(this.created_at);
    output.writeFieldEnd();
  }
  if (this.avatar_url !== null && this.avatar_url !== undefined) {
    output.writeFieldBegin('avatar_url', Thrift.Type.STRING, 5);
    output.writeString(this.avatar_url);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ProfileUpdated = module.exports.ProfileUpdated = function(args) {
  this.entity_uuid = null;
  this.full_name = null;
  this.email_address = null;
  this.updated_at = null;
  this.avatar_url = null;
  if (args) {
    if (args.entity_uuid !== undefined && args.entity_uuid !== null) {
      this.entity_uuid = args.entity_uuid;
    }
    if (args.full_name !== undefined && args.full_name !== null) {
      this.full_name = args.full_name;
    }
    if (args.email_address !== undefined && args.email_address !== null) {
      this.email_address = args.email_address;
    }
    if (args.updated_at !== undefined && args.updated_at !== null) {
      this.updated_at = args.updated_at;
    }
    if (args.avatar_url !== undefined && args.avatar_url !== null) {
      this.avatar_url = args.avatar_url;
    }
  }
};
ProfileUpdated.prototype = {};
ProfileUpdated.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.full_name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.email_address = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.updated_at = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.avatar_url = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProfileUpdated.prototype.write = function(output) {
  output.writeStructBegin('ProfileUpdated');
  if (this.entity_uuid !== null && this.entity_uuid !== undefined) {
    output.writeFieldBegin('entity_uuid', Thrift.Type.STRING, 1);
    output.writeString(this.entity_uuid);
    output.writeFieldEnd();
  }
  if (this.full_name !== null && this.full_name !== undefined) {
    output.writeFieldBegin('full_name', Thrift.Type.STRING, 2);
    output.writeString(this.full_name);
    output.writeFieldEnd();
  }
  if (this.email_address !== null && this.email_address !== undefined) {
    output.writeFieldBegin('email_address', Thrift.Type.STRING, 3);
    output.writeString(this.email_address);
    output.writeFieldEnd();
  }
  if (this.updated_at !== null && this.updated_at !== undefined) {
    output.writeFieldBegin('updated_at', Thrift.Type.STRING, 4);
    output.writeString(this.updated_at);
    output.writeFieldEnd();
  }
  if (this.avatar_url !== null && this.avatar_url !== undefined) {
    output.writeFieldBegin('avatar_url', Thrift.Type.STRING, 5);
    output.writeString(this.avatar_url);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ProfileDeleted = module.exports.ProfileDeleted = function(args) {
  this.entity_uuid = null;
  this.deleted_at = null;
  if (args) {
    if (args.entity_uuid !== undefined && args.entity_uuid !== null) {
      this.entity_uuid = args.entity_uuid;
    }
    if (args.deleted_at !== undefined && args.deleted_at !== null) {
      this.deleted_at = args.deleted_at;
    }
  }
};
ProfileDeleted.prototype = {};
ProfileDeleted.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.deleted_at = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProfileDeleted.prototype.write = function(output) {
  output.writeStructBegin('ProfileDeleted');
  if (this.entity_uuid !== null && this.entity_uuid !== undefined) {
    output.writeFieldBegin('entity_uuid', Thrift.Type.STRING, 1);
    output.writeString(this.entity_uuid);
    output.writeFieldEnd();
  }
  if (this.deleted_at !== null && this.deleted_at !== undefined) {
    output.writeFieldBegin('deleted_at', Thrift.Type.STRING, 2);
    output.writeString(this.deleted_at);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ProfileChanged = module.exports.ProfileChanged = function(args) {
  this.change_type = null;
  this.changed_at = null;
  this.entity_uuid = null;
  this.first_name = null;
  this.last_name = null;
  this.full_name = null;
  this.email_address = null;
  this.avatar_url = null;
  if (args) {
    if (args.change_type !== undefined && args.change_type !== null) {
      this.change_type = args.change_type;
    }
    if (args.changed_at !== undefined && args.changed_at !== null) {
      this.changed_at = args.changed_at;
    }
    if (args.entity_uuid !== undefined && args.entity_uuid !== null) {
      this.entity_uuid = args.entity_uuid;
    }
    if (args.first_name !== undefined && args.first_name !== null) {
      this.first_name = args.first_name;
    }
    if (args.last_name !== undefined && args.last_name !== null) {
      this.last_name = args.last_name;
    }
    if (args.full_name !== undefined && args.full_name !== null) {
      this.full_name = args.full_name;
    }
    if (args.email_address !== undefined && args.email_address !== null) {
      this.email_address = args.email_address;
    }
    if (args.avatar_url !== undefined && args.avatar_url !== null) {
      this.avatar_url = args.avatar_url;
    }
  }
};
ProfileChanged.prototype = {};
ProfileChanged.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.change_type = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.changed_at = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.entity_uuid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.first_name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.last_name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.full_name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.email_address = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.STRING) {
        this.avatar_url = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProfileChanged.prototype.write = function(output) {
  output.writeStructBegin('ProfileChanged');
  if (this.change_type !== null && this.change_type !== undefined) {
    output.writeFieldBegin('change_type', Thrift.Type.I32, 1);
    output.writeI32(this.change_type);
    output.writeFieldEnd();
  }
  if (this.changed_at !== null && this.changed_at !== undefined) {
    output.writeFieldBegin('changed_at', Thrift.Type.STRING, 2);
    output.writeString(this.changed_at);
    output.writeFieldEnd();
  }
  if (this.entity_uuid !== null && this.entity_uuid !== undefined) {
    output.writeFieldBegin('entity_uuid', Thrift.Type.STRING, 3);
    output.writeString(this.entity_uuid);
    output.writeFieldEnd();
  }
  if (this.first_name !== null && this.first_name !== undefined) {
    output.writeFieldBegin('first_name', Thrift.Type.STRING, 4);
    output.writeString(this.first_name);
    output.writeFieldEnd();
  }
  if (this.last_name !== null && this.last_name !== undefined) {
    output.writeFieldBegin('last_name', Thrift.Type.STRING, 5);
    output.writeString(this.last_name);
    output.writeFieldEnd();
  }
  if (this.full_name !== null && this.full_name !== undefined) {
    output.writeFieldBegin('full_name', Thrift.Type.STRING, 6);
    output.writeString(this.full_name);
    output.writeFieldEnd();
  }
  if (this.email_address !== null && this.email_address !== undefined) {
    output.writeFieldBegin('email_address', Thrift.Type.STRING, 7);
    output.writeString(this.email_address);
    output.writeFieldEnd();
  }
  if (this.avatar_url !== null && this.avatar_url !== undefined) {
    output.writeFieldBegin('avatar_url', Thrift.Type.STRING, 8);
    output.writeString(this.avatar_url);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

